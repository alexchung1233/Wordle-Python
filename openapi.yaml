openapi: 3.0.2
info:
  version: '1.0.0'
  
  title: Python Wordle
  
  description: 'API Spec for Python Wordle'
externalDocs:
  description: Github Repository Link 
  url: 'https://github.com/alexchung1233/Wordle-Python'

tags:
  - name: Game
    description: Operations about user
  - name: User
    description: Operations about a game
  - name: Dictionary
    description: Operations about for the dictionary
servers:
  - url: 'http:/ec2-3-19-243-218.us-east-2.compute.amazonaws.com/v1/wordle'

paths:
  '/wordle/user/{user_id}': # path parameter in curly braces

    # parameters list that are used with each operation for this path
    parameters:
      - name: user_id
        in: query
        description: User id
        schema:
          type: string
    get: # documentation for GET operation for this path
      tags:
        - User
      
      # summary is up to 120 symbold but we recommend to be shortest as possible
      summary: Get user by user id
            
      # list of parameters for the operation
      parameters:
        - name: user_id
          in: path
          description: The user associated
          required: true
          schema:
            type: string
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/User'
              example: # response example
                user_id: 543d11b9-6850-4bdb-9b0f-7962e9a2b037
                user_name: John Doe
        '404':
          description: User not found
  '/wordle/user/{user_id}/games':
    get:
      tags:
        - User
      summary: Get a game
      parameters:
        - name: user_id
          in: path
          description: The user associated
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/GameList'
              example: # response example
                games: [{"game_id": "06d05ecd-310b-4a79-9dea-6d5f115eb2b9", "user_id": "543d11b9-6850-4bdb-9b0f-7962e9a2b037","user_name": "Alex Chungs", "answer": "account", "max_attempts": 8, "current_attempts": 0, "attempts": []},{"game_id": "1dbc72c5-d4fb-43b3-b87d-0e02d9123a64", "user_id": "543d11b9-6850-4bdb-9b0f-7962e9a2b037", "user_name":"Alex Chungs", "answer": "signing", "max_attempts": 8, "current_attempts": 0, "attempts": []}]
        '404':
          description: User not found
  '/wordle/game': # path parameter in curly braces
    post: # documentation for POST operation for this path
      tags:
        - Game
      summary: Create a game
      responses:
        '201':
          description: Created
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/Game'
      requestBody:
        content:
          application/json: # operation response mime type
            schema: # response schema can be specified for each response
              $ref: '#/components/schemas/CreateGamePayload'
        required: true
  '/wordle/game/{game_id}':
    parameters:
    - name: game_id
      in: path
      schema: 
        type: string
      required: true
    get:
      tags:
        - Game
      summary: Get a game
      responses:
        '200':
          description: Ok
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/Game'
        '404':
          description: Game not found

  /wordle/game/{game_id}/attempt:
    parameters:
      - name: game_id
        in: path
        schema: 
          type: string
        required: true
    post:
      tags:
        - Game
      summary: Wordle game attempt
      description: Wordle game attempt
      responses:
        '201':
          description: Created
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/AttemptAnswerPayload'
        '216':
          description: Attempt accepted but not in dictionary, not right size, or does not adhere to Hard difficulty rules
        '404':
          description: Game not found
      requestBody:
        content:
          application/json: # operation response mime type
            schema: # response schema can be specified for each response
              $ref: '#/components/schemas/AttemptPayload'
        required: true
  '/wordle/dictionary':
    post:
      tags:
        - Dictionary
      description: Add new word to wordle dictionary
      responses:
        '201':
          description: New word created
          content:
            application/json:
              schema:
                type: string
              examples:
                response:
                  value: New word added successfully
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: string
              examples:
                response:
                  value: Word already exists
      requestBody:
        content:
          application/json: # operation response mime type
            schema: # response schema can be specified for each response
              $ref: '#/components/schemas/NewWordPayload'
        required: true

components:
  schemas:
    GameList:
      type: object
      properties:
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'
    CreateGamePayload:
      type: object
      properties:
        user_name:
          type: string
        answer_length:
          type: integer
        user_id:
          type: string
    Game:
      type: object
      properties:
        game_id:
          type: string
        user_id:
          type: string
        user_name: 
          type: string
        max_attempts:
          type: string
        has_won: 
          type: boolean
        difficulty:
           $ref: '#/components/schemas/Difficulty'
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/AttemptAnswer'

        current_attempts:
          type: integer
    User:
      type: object
      properties:
        user_name:
          description: User supplied username
          type: string
        user_id:
          type: string
    AttemptPayload:
      type: object
      properties:
        attempt_word: 
          description: Attempt word
          type: string
    AttemptAnswerPayload:
      type: object
      properties:
        attempt_letter:
          type: array
          items:
            $ref: '#/components/schemas/AttemptAnswer'
    AttemptAnswer:
      type: array
      items:
        $ref: '#/components/schemas/LetterAnswer'
    LetterAnswer:
      type: object
      properties:
        letter: 
          type: string
        letter_answer:
          $ref: '#/components/schemas/LetterAnswerEnum'
    NewWordPayload:
      type: object
      properties:
        word:
          type: string
    Difficulty:
      type: string
      enum:
        - EASY
        - HARD
    LetterAnswerEnum:
      type: string
      enum:
        - CORRECT
        - WRONG_SPOT
        - INCORRECT